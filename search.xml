<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用电商管理后台API进行自动化测试（一）</title>
      <link href="python/11/23/"/>
      <url>python/11/23/</url>
      
        <content type="html"><![CDATA[<h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><p>​    之前跟一些想做测试的学弟学妹们交流，发现大家的苦恼都是说毕业以后想做测试，但是实在不知道如何开始，跟着网上的教程学了一部分以后想练手也比较难找到一套合适的接口，其实网上有很多公开的公用API可以用于调用，但是一来是需要在线认证二是有一些会有调用次数限制，所以最近在网上找了一套开源的电商API，环境搭建好后本地启动就可以直接开始调用。</p><h2 id="二、环境搭建"><a href="#二、环境搭建" class="headerlink" title="二、环境搭建"></a>二、环境搭建</h2><ul><li>安装Node.js</li><li>添加国内镜像源</li><li>安装git</li><li>电商管理后台源代码下载</li><li>安装MySQL</li><li>修改配置等以及启动环境</li></ul><h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4><p>​    首先下载<a href="https://nodejs.org/zh-cn/download/">稳定版</a>至于安装32位还是64位自行选择即可，安装时一路默认点击Next即可。</p><p>安装完成后打开CMD输入<code>node -v</code>和<code>npm -v</code>如果出现均出现版本号那就安装成功了。</p><h4 id="添加国内镜像源"><a href="#添加国内镜像源" class="headerlink" title="添加国内镜像源"></a>添加国内镜像源</h4><p>​    建议安装以后设置阿里的国内镜像源进行加速，在cmd下输入。</p><p><code>npm config set registry https://registry.npm.taobao.org</code></p><p>随后再输入，观察是否把源切换成功。</p><p><code>npm config get registry</code></p><h4 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h4><p>​    点击git的下载链接进行下载：<a href="https://git-scm.com/downloads">点击这里</a></p><p>下载速度慢的可以选择国内镜像地址：<a href="http://npm.taobao.org/mirrors/git-for-windows/">点击这里</a></p><p>也是一路默认点击Next即可，最后一步时记得选择<code>Use Git from the Windows Command Prompt</code></p><p>安装成功后在命令提示符中输入<code>git --version</code>出现版本号则安装成功</p><h4 id="电商管理后台源代码下载"><a href="#电商管理后台源代码下载" class="headerlink" title="电商管理后台源代码下载"></a>电商管理后台源代码下载</h4><p>​    这里贴一下大牛的项目地址：<a href="https://github.com/lipengzhou/shop-api">Vue 电商后台管理系统后台 API 接口服务器</a></p><p>本地新建文件夹，切换到新建的文件夹目录下，空白区域右键点击<code>Git Bash Here</code></p><p>打开git命令行页面，输入<code>git clone https://github.com/lipengzhou/shop-api.git</code>后回车，可以在git里看到<code>Cloning into 'shop-api'...</code>的提示表明正在下载，下载完成后保留命令行页面</p><h4 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h4><p>​    具体怎么安装可参照菜鸟教程的教程：<a href="https://www.runoob.com/mysql/mysql-install.html">点击这里</a>，本文就不详细写了。请务必记住root的密码。</p><h4 id="修改配置等以及启动环境"><a href="#修改配置等以及启动环境" class="headerlink" title="修改配置等以及启动环境"></a>修改配置等以及启动环境</h4><p>​    先执行<code>npm install</code>安装依赖，依赖安装成功后还需要修改对应的配置文件</p><h5 id="修改数据库配置信息"><a href="#修改数据库配置信息" class="headerlink" title="修改数据库配置信息"></a>修改数据库配置信息</h5><p>​    打开config/default.json，找到<code>db_config</code>进行修改：</p><pre class="line-numbers language-json"><code class="language-json">    <span class="token property">"db_config"</span> <span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"protocol"</span> <span class="token operator">:</span> <span class="token string">"mysql"</span><span class="token punctuation">,</span>        <span class="token property">"host"</span> <span class="token operator">:</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span>        <span class="token property">"database"</span> <span class="token operator">:</span> <span class="token string">"shop"</span><span class="token punctuation">,</span>        <span class="token property">"user"</span> <span class="token operator">:</span> <span class="token string">"root"</span><span class="token punctuation">,</span>        <span class="token property">"password"</span> <span class="token operator">:</span> <span class="token string">"123456"</span><span class="token punctuation">,</span>        <span class="token property">"port"</span> <span class="token operator">:</span> <span class="token number">3306</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    其中database为shop所以需要在本地新建一个名为shop的数据库，user与password改成安装MySQL时的账号跟密码即可。</p><h5 id="执行SQL初始化数据"><a href="#执行SQL初始化数据" class="headerlink" title="执行SQL初始化数据"></a>执行SQL初始化数据</h5><p>​    在shop数据库执行文件夹中的shop.sql即可</p><h5 id="修改端口为空闲端口"><a href="#修改端口为空闲端口" class="headerlink" title="修改端口为空闲端口"></a>修改端口为空闲端口</h5><p>​    项目默认端口是8888，启动之前可以先命令行窗口执行<code>netstat -ano | findstr "8888"</code>查看端口是否空闲，空闲的话则不需要修改，若有其他程序占用的话则需要修改。</p><p>修改方式为打开app.js，找到</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> PORT <span class="token operator">=</span> <span class="token number">8888</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改成对应的空闲端口即可。</p><h5 id="启动环境"><a href="#启动环境" class="headerlink" title="启动环境"></a>启动环境</h5><p>​    <code>npm start</code>后出现“API 接口服务启动成功，占用端口 xxxx”提示表明启动成功。</p><h2 id="三、简单的测试"><a href="#三、简单的测试" class="headerlink" title="三、简单的测试"></a>三、简单的测试</h2><p>​    先给出API文档地址：<a href="https://github.com/lipengzhou/shop-api-doc">电商管理后台 API 接口文档</a>,文档里写API V1认证统一使用Token认证，可以先调用login接口拿到token，下面给出使用postman调用的简单示例。</p><h4 id="3-1-postman调用"><a href="#3-1-postman调用" class="headerlink" title="3.1 postman调用"></a>3.1 postman调用</h4><h5 id="3-1-1-postman设置全局变量"><a href="#3-1-1-postman设置全局变量" class="headerlink" title="3.1.1 postman设置全局变量"></a>3.1.1 postman设置全局变量</h5><p>​    可以将接口基准地址<code>http://localhost:8888/api/private/v1</code>设置为全局变量，后续只需要改动接口地址即可（如果之前改了API运行的端口则需要将对应的端口改成修改后的端口），我将基准地址设置成了全局变量，执行如图：</p><img src="https://i.loli.net/2020/11/23/NJscGymvKQzYU4X.png" style="zoom:50%;"><p>能成功调通，并且在返回中能拿到相应的Token，如图：</p><p><img src="https://i.loli.net/2020/11/23/WkBo2aM3fCchlgt.png"></p><p>有了Token就能使用postman去调用其他接口，本文以最简单的用户数据列表接口为例子，接口文档里可以看到字段<code>pagesize</code>与<code>pagenum</code>为必填字段，在postman添加Authorization如图：</p><p><img src="https://i.loli.net/2020/11/23/BpJnghzLvj4ZsAe.png"></p><p>传参<code>pagenum</code>为1，<code>pagesize</code>为5，直接执行能拿到结果：</p><img src="https://i.loli.net/2020/11/23/u6YfCO9AnPbUR4M.png" style="zoom:50%;"><p>至此大家应该能正常的调用其他的接口，开始写自己的脚本吧。</p><h2 id="四、常见问题及解决方法"><a href="#四、常见问题及解决方法" class="headerlink" title="四、常见问题及解决方法"></a>四、常见问题及解决方法</h2><h4 id="4-1-throw-err-Rethrow-non-MySQL-errors"><a href="#4-1-throw-err-Rethrow-non-MySQL-errors" class="headerlink" title="4.1 throw err;Rethrow non-MySQL errors"></a>4.1 throw err;Rethrow non-MySQL errors</h4><p>config/default.json中数据库配置有问题，需要按自己的实际情况进行修改(详情见上文)。</p><h4 id="4-2-端口被占用"><a href="#4-2-端口被占用" class="headerlink" title="4.2 端口被占用"></a>4.2 端口被占用</h4><p>修改端口为空闲的端口即可（见上文）。</p><h4 id="4-3-如何获取有效的Token"><a href="#4-3-如何获取有效的Token" class="headerlink" title="4.3 如何获取有效的Token"></a>4.3 如何获取有效的Token</h4><p>可以先调用一次<code>login</code>接口，<code>username</code>为”admin”，<code>password</code>为”123456”。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 接口自动化测试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
